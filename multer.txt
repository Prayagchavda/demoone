const express = require("express");
const multer = require("multer");
const bodyParser = require("body-parser");
const path = require("path");

const app = express();

// Middleware
app.use(bodyParser.json()); // To parse JSON data
app.use(bodyParser.urlencoded({ extended: true })); // For URL-encoded form data

// Multer configuration for file storage
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, "uploads"); // Save files to "uploads" folder
  },
  filename: (req, file, cb) => {
    const uniqueName = `${Date.now()}-${file.originalname}`;
    cb(null, uniqueName); // Rename file to a unique name
  },
});

const upload = multer({ storage });

// API to handle form-data with text and file
app.post("/upload", upload.single("file"), (req, res) => {
  try {
    // Access text data from the request body
    const name = req.body.name; // Example key in form-data
    const description = req.body.description; // Example key in form-data

    // Access uploaded file information
    const fileName = req.file.filename;
    const fileType = req.file.mimetype;

    // Response with all data
    res.status(200).json({
      message: "File and data uploaded successfully!",
      uploadedFile: {
        fileName: fileName,
        fileType: fileType,
        originalName: req.file.originalname,
      },
      formData: {
        name: name,
        description: description,
      },
    });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// Start the server
const PORT = 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
